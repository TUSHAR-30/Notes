Authentication:-Every time user makes a request on server , the server takes user details and checks whether user exist in database or not in order to give him entry in the website.

For the first time user makes a request , the server needs all the important user details.
But after that for the further request , if user need to provide all his details again then it make very frustrating for the user to send details on each request.So , the solution for this problem is to find the way of telling the server that hey server i have already authenticated so don't take my details on each authentication request.
And the way is to give the server a unique number that the server will verify that this unique number matches with which user.But user don't know which number he has to send.So, it is taken care by server and server generates this unique number and send it to the user as a response in the first authentication request if the user gets authenticated.

But every user will get one unique number and when the user sends this unique number in subsequent request; how the server will know from the unique number that this unique number belongs to which user.
So, the solution for this problem can be resolved in 2 ways:-
1)Session id 
2)JWT Token

1)In this approach,the unique number which is send to the user is called as session id. This session id is stored with the user details in the database or server in the first authentication request made by the user . And when the user send the session id to the server; first the server checks whether such a session id exist in database or not by comparing the user session id with the user has send with the each session id which is stored in each document in database.If the server is able to find the match, then the server consider the request sent by the user as authenticated otherwise not.



2)In this approach,the unique number which is send to the user is called as jwt token.It is different from first approach in the sense that the server gives this unique number to the user but doesn't store this number in server or database . But then how the server will know that which token belongs to which user in the next authentication requests. So, now lets talk about how this process works. In this approach, the unique number which is sent to the user is created using secret string. This secret string is the same string which is used in creating each token . This secret string combines with the payload and generates a unique number. Here the payload refers to the user details. And the payload for each user is different as the payload consist of unique user_id and the user details. And then the jwt algorithm also combines with these things. 

So a unique number is generated by combining Jwt algorithm + secret string + payload . And this unique number is called as signature. And Again this signature is combined with jwt algorithm and payload which finally creates jwt token.Also in order to add further security this jwt token is converted into encoded it into a different form.and finally now jwt token is ready.

And now this jwt token is sent to the user and on each subsequent request the user send this jwt token to the server and server now decode this jwt token. And after that it separates out signature,payload and jwt algorithm.And then jwt has special method which takes out the payload from the signature and compares these 2 payloads and if they matches then the user is considered as authenticated.




The first approach of session id is called as Statefull authentication and the second approach of jwt token is called as Stateless authentication.
In the statefull authentication we are storing the session id in server or databse . But in the statelless authentication we are not storing jwt token in server .
